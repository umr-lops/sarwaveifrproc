[project]
name = "sarwaveifrproc"
requires-python = ">= 3.9"
description = "Python library to generate Level-2 WAVE Product starting from Ifremer Level-1B or Level-1C SAR files"
readme.file = "README.md"
readme.content-type = "text/markdown"
license = {text = "MIT"}
keywords = ["SAR", "wave", "reseach","sea-state"]
authors = [
  {name = "Robin Marquart"},
  {name = "Antoine Grouazel"}
]
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "xarray",
    "netCDF4",
    "pyyaml",
    "scipy",
    "tensorflow",
    ]

dynamic = ["version"]

[build-system]
requires = ["setuptools>=64.0", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["sarwaveifrproc"]

[tool.setuptools_scm]
fallback_version = "999"

[tool.isort]
profile = "black"
skip_gitignore = true
float_to_top = true
default_section = "THIRDPARTY"
known_first_party = "sarwaveifrproc"

[project.scripts]
L2-wave-processor = "sarwaveifrproc.main:main"

[tool.ruff.lint]
ignore = [
  "E402",  # module level import not at top of file
  "E501",  # line too long - let black worry about that
  "E731",  # do not assign a lambda expression, use a def
  "UP038", # type union instead of tuple for isinstance etc
]
select = [
  "F",   # Pyflakes
  "E",   # Pycodestyle
  "I",   # isort
  "UP",  # Pyupgrade
  "TID", # flake8-tidy-imports
  "W",
]
extend-safe-fixes = [
  "TID252", # absolute imports
  "UP031",  # percent string interpolation
]
fixable = ["I", "TID252", "UP"]

[tool.ruff.lint.isort]
known-first-party = ["sarwaveifrproc"]
known-third-party = ["xarray", "toolz", "construct"]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"